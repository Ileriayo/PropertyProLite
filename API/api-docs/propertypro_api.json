{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "PropertyPro",
    "description": "Collection for Property Pro Lite API requests.\nProperty Pro Lite is a platform where people can create and/or search properties for sale or rent.",
    "contact": {
      "email": "ileriayoadebiyi@gmail.com"
    }
  },
  "paths": {
    "/auth/signup": {
      "post": {
        "description": "New users can sign up",
        "summary": "Become a registered user",
        "tags": [
          "Auth"
        ],
        "operationId": "AuthSignupPost",
        "deprecated": false,
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "description": "User details",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Sign up successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "description": "Users can sign in",
        "summary": "Sign in",
        "tags": [
          "Auth"
        ],
        "operationId": "AuthSigninPost",
        "deprecated": false,
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              }
            }
          },
          "description": "Login details",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login Successful",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/property": {
      "post": {
        "description": "Users (Agents) can create a property advert",
        "summary": "Create property ad",
        "tags": [
          "Property"
        ],
        "operationId": "PropertyPost",
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Property"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Proeperty Created Successfuly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Users can view all property adverts",
        "summary": "Get all properties",
        "tags": [
          "Property"
        ],
        "operationId": "PropertyGet",
        "deprecated": false,
        "responses": {
          "200": {
            "description": "An array of properties",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertiesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/property/{property-id}/sold": {
      "patch": {
        "description": "Agents can mark their property as sold",
        "summary": "Mark property as sold",
        "tags": [
          "Property"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "property-id",
            "required": true,
            "description": "",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "operationId": "Property1SoldPatch",
        "deprecated": false,
        "responses": {
          "200": {
            "description": "Operation successful",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/property/{property-id}": {
      "get": {
        "description": "Users can view the details of a property advert",
        "summary": "View one property (by id)",
        "tags": [
          "Property"
        ],
        "operationId": "Property1Get",
        "deprecated": false,
        "parameters": [
          {
            "in": "path",
            "name": "property-id",
            "required": true,
            "description": "",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Agents can update the details (price) of a property",
        "summary": "Update property",
        "tags": [
          "Property"
        ],
        "operationId": "Property1Patch",
        "deprecated": false,
        "parameters": [
          {
            "in": "path",
            "name": "property-id",
            "required": true,
            "description": "",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "integer"
                  }
                },
                "required": [
                  "Price"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Agents can delete their property advert(s)",
        "summary": "Delete a property",
        "tags": [
          "Property"
        ],
        "operationId": "Property1Delete",
        "deprecated": false,
        "parameters": [
          {
            "in": "path",
            "name": "property-id",
            "required": true,
            "description": "",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": ""
    },
    {
      "name": "Property",
      "description": "Operations about properties"
    }
  ],
  "servers": [
    {
      "url": "https://propertyproo.herokuapp.com/api/v1"
    },
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Property": {
        "title": "Property",
        "type": "object",
        "properties": {
          "price": {
            "type": "integer"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "image_url": {
            "type": "string",
            "format": "image-url"
          }
        }
      },
      "UserResponse": {
        "title": "UserResponse",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "email": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              }
            }
          }
        }
      },
      "PropertyResponse": {
        "title": "PropertyResponse",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "price": {
                "type": "integer"
              },
              "created_on": {
                "type": "string",
                "format": "date-time"
              },
              "image_url": {
                "type": "string"
              }
            }
          }
        }
      },
      "PropertiesResponse": {
        "title": "PropertiesResponse",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PropertyResponse"
        }
      },
      "SigninRequest": {
        "title": "SigninRequest",
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "price"
        ]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}